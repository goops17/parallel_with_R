monty_hall<-function(n)
    {
        #Monty Hall Problem in R Code
        #First a vector for our doors
        doors <- c("A", "B", "C")

        #Then an object to store all the info generated by the loop
        xdata = c( )

        #The loop - simulate a game at a time
        for (i in 1:n)
        {
          #place the prize behind a door sample ( ) function index
          #this randomly assorted vector with [1]
          prize <- sample(doors)[1]
          #now simualate a pic if prize and pick are the same gamer got it right first
          pick <- sample(doors)[1]

          #Game master picks a door other than pick and one that doesn't have the prize
          open <- sample(doors[which (doors != pick & doors != prize)])[1]
          #The which command returns a number (in above) it is the position of the 
          #vector door that is not equal to pick & not equal to prize
          #which command will give you the number to index the doors vector
          #It's possible that prize and pick are equal so use [1] to give us just one value
          #Sample() is used to randomize this value

          #We have the door picked under no-switching now simulate another participant that switched doors
          switchyes <- doors[which(doors != pick & doors != open)]
          #Basically - simulate switching by taking one element of the vector doors which was not the original
          #pick and not the door that was opened

          #Using two if statements find out to see who wins
          #Switching or non switching
          if(pick == prize)
          {
            xdata = c(xdata, "noswitchwin")
          }
          if(switchyes == prize)
          {
            xdata = c(xdata, "switchwin")
          }
        }
        #cat("Switching wins: ", length(which(xdata == "switchwin")),"\n")
        #cat("Non Switching wins: ", length(which(xdata == "noswitchwin")))
        return(xdata)
    }
     cases<-c(10,20,30,40,50,60,70,80,90,100,110)
     result<-c()
     for (i in 1:length(cases))
        {
            a<-monty_hall(cases[i])
            #cat("Switching wins percentage: ", length(which(a == "switchwin"))/length(a),"\n")
            result<-c(result,length(which(a == "switchwin"))/length(a))
        }
    cat("Switching win : ", result)
    cat("\nSwitching win percentage: ", result)
    cat("\nNot Switching win percentage: ", 1-result)
    cat("\nClosest switching  percentage index: ", which.min(abs(result-0.6666)))
    #cat("\nClosest non switching  percentage: ", abs(result-0.3333))
    cat("\nMatching Loop Value : ", cases[which.min(abs(result-0.6666))])
    cat("\nClosest non switching  percentage index: ", which.min(abs((1-result)-0.3333)))
    cat("\nMatching Loop Value: ", cases[which.min(abs((1-result)-0.3333))])